{"_id":"note:NxE9OsS6c","title":"Anotações Hcode","content":"Criação de elementos:\n\n\"document\" -> Refere-se ao site\n\ndocument é um objeto que Armazena TUDO do documento\nex: document.createElement(\"div\")\n\nVariável que armazena um Objeto vira uma \"Referência do Objeto\" acessando o conteudo contido no mesmo.\nEx: \t\n\nvar name = document.querySelector(\"#exampleInputName\")\n\n\tname.value = \"Gustavo\"\n\n\"Metodo\": É uma ação que será executada. Todo metodo contem ( )\n\n\"index\": Declarando 'index' nos parâmetros é possível acessar o index do elemento repassado, ex: 0, 1, 2\n\n\n=== -> Compara valor e o tipo do dado\n\nJSON = JavaScript Object Notation: É um padrão de Notações JS baseado em CHAVE e VALOR\n\nVariável declarada fora da função é visível dentro e fora da função\n\n\nthis => Este\n\ngetElementById -> Cápta apenas Id's e era mais utilizado antes do querySelector\n\npreventDefault -> Cancela o comando padrão que o evento teria\n\nSPA -> Single Page Application: Aplicação de página única\naddEventListener -> É o mesmo que preparar para ouvir melhor\n\nFunção sempre retorna algum valor\n\nSubrotina -> Função que não retorna valor.\n\nParâmetros -> Informações necessárias para a função.\n\ninnerHTML -> Recupera ou atribui um valor a um elemento HTML.\n\n\n______________________________________________\nA38 - Orientação a objetos: \n\n\"METODOS\": Ações que serão executadas.\n\nToda classe possui um CONSTRUCTOR e dentro do constructor é necessário declarar os MÉTODOS dentro dos PARÂMETROS.\n\nEX: CONSTRUCTOR\n\nconstructor (name, gender, birth, country, email, password, photo, admin) \n        \n        this.name = name\n        this.gender = gender\n        this.birth = birth\n        this.country = country\n        this.email = email\n        this.password = password\n        this.photo = photo\n        this.admin = admin\n        \nObjeto é a cópia da classe criado com 'new'. Processo denominado como 'instancia'.\n\nUM OBJETO É UMA VARIÁVEL QUE INSTANCIA OU REPRESENTA UMA CLASSE UMA CLASSE\n\nEX:\n\nvar objectUser = new User (user.name, user.gender, user.birth, user.country, user.email, user.password, user.photo, user.admin)\n\n\nOBS: O valor após o '=' pode ser alterado, não é obrigado ser o mesmo nome do método.\n\n______________________________________________\nA39 - Programação Orientada a Objetos - MVC- Controller\n\n\nMVC - Model View Controller // Estrutura do projeto em camadas\n\nModel: Controle de Armazenamento dos Dados\n\nView: Interface que o usuário utiliza\n\nController: Define as regras de negócio e liga o Model e a View\n\n\n_____________________________________________","tags":[],"folderPathname":"/Anotações-Boost-Note","data":{},"createdAt":"2020-09-27T15:08:21.638Z","updatedAt":"2020-09-27T17:31:15.672Z","trashed":false,"_rev":"TNC4MKgfF"}